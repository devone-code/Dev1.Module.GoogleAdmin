@namespace Dev1.Flow.Core.Client

@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Web

@using System.Globalization

@inherits InputTypeBase




    <div class="form-floating mb-4">
        <input type="number" class="form-control" value="@val" @onchange="ConvertToInt" placeholder="Question Text" id="@PropertyId" required="@IsRequired">
        <label for="@PropertyId">@PropertyName</label>
    </div>





@code {
    private int val = 0;

    protected override void OnParametersSet()
    {
        if (string.IsNullOrEmpty(PropertyValue))
        {
            PropertyValue = "1";
            
        }
        else
        {
            val = Convert.ToInt32(PropertyValue);
        }
        //base.OnParametersSet();
    }


    //private void Apply()
    //{
    //    PropertyValue = value;
    //    ValueChangedCallback.InvokeAsync(PropertyValue);

    //}

    private async Task ConvertToInt(ChangeEventArgs e )
    {
        string strVal = e.Value.ToString();
        decimal dVal;
        int iVal;
        if (decimal.TryParse(strVal, NumberStyles.Any, CultureInfo.InvariantCulture,out dVal))
        {
            iVal = Convert.ToInt16(dVal);
            await PropertyValueChanged.InvokeAsync(iVal.ToString());
            
        }
        else if (int.TryParse(strVal, NumberStyles.Any, CultureInfo.InvariantCulture, out iVal))
            await PropertyValueChanged.InvokeAsync(iVal.ToString());

        val = iVal;
    }


}